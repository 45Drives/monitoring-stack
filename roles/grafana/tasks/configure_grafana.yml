---
- name: make sure grafana is down
  service:
    name: grafana-server
    state: stopped

- name: wait for grafana to be stopped
  wait_for:
    port: '{{ grafana_port }}'
    state: stopped

- name: make sure grafana configuration directories exist
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
  with_items:
    - "/etc/grafana/provisioning/datasources"
    - "/etc/grafana/provisioning/dashboards"

- name: write grafana.ini
  template:
    src: grafana.ini.j2
    dest: /etc/grafana/grafana.ini
    mode: 0640

- name: write datasources provisioning config file
  template:
    src: datasources-prometheus.yml.j2
    dest: /etc/grafana/provisioning/datasources/prometheus.yml
    mode: 0640

- name: Write dashboards provisioning config files
  template:
    src: dashboards-{{ item }}.yml.j2
    dest: /etc/grafana/provisioning/dashboards/{{ item }}.yml
    mode: 0640
  with_items:
    - zfs
    - system

- name: Write zfs dashboard files
  copy:
    src: "{{ item }}"
    dest: "{{ grafana_dashboards_path }}/zfs/"
    owner: root
    group: root
    mode: 0644
  with_items:
    - zfs-overview.json
    - zfs-detailed-stats.json
    - zfs-replication-overview.json

- name: Write System dashboard files
  copy:
    src: "{{ item }}"
    dest: "{{ grafana_dashboards_path }}/system/"
    owner: root
    group: root
    mode: 0644
  with_items:
    - system-overview.json
    - network-overview.json

- name: copy grafana SSL certificate file
  copy:
    src: "{{ grafana_crt }}"
    dest: "/etc/grafana/ceph-dashboard.crt"
    mode: 0640
  when:
    - grafana_crt | bool
    - grafana_protocol == "https"

- name: copy grafana SSL certificate key
  copy:
    src: "{{ grafana_key }}"
    dest: "/etc/grafana/ceph-dashboard.key"
    mode: 0440
  when:
    - grafana_key | bool
    - grafana_protocol == "https"

- name: generate a Self Signed OpenSSL certificate for dashboard
  shell: |
    test -f /etc/grafana/dashboard.key -a -f /etc/grafana/dashboard.crt || \
    openssl req -new -nodes -x509 -subj '/O=IT/CN=grafana' -days 3650 -keyout /etc/grafana/dashboard.key -out /etc/grafana/dashboard.crt -extensions v3_ca
  when:
    - grafana_protocol == "https"
    - not grafana_key | bool or not grafana_crt | bool

- name: set owner/group on /etc/grafana
  file:
    path: /etc/grafana
    state: directory
    # This is the UID used by the grafana container
    owner: "{{ grafana_uid }}"
    # This group is used by the grafana rpm
    group: "grafana"
    recurse: true

- name: open grafana firewall port
  firewalld:
    port: "{{ grafana_port }}/tcp"
    zone: "public"
    permanent: true
    immediate: true
    state: enabled

- name: enable and start grafana
  service:
    name: grafana-server
    state: restarted
    enabled: true

- name: wait for grafana to start
  wait_for:
    port: "{{ grafana_port }}"
